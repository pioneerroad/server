/**
 * Created by pioneerroad on 31/08/15.
 */

module.exports = {

        friendsNearby: 'SELECT "relationship_friends"."userA" AS "friendId", "user_profiles"."profilePhoto" as "profilePhoto", "user_profiles"."nickName" AS nickname, "user_profiles"."currentLocation"->\'updatedAt\' as "checkinTime", ST_Distance_Sphere((SELECT "user_profiles"."the_geom" FROM "user_profiles" WHERE "user_profiles"."userAccountId" = :uid), "user_profiles"."the_geom") / 1000 as distance FROM "relationship_friends" LEFT JOIN "user_profiles" ON "relationship_friends"."userA" = "user_profiles"."userAccountId" LEFT JOIN "dataSet_towns" ON "dataSet_towns"."id" = "user_profiles"."homeTownId" WHERE "relationship_friends"."userB" = :uid AND "relationship_friends"."status" = \'active\' AND ST_Distance_Sphere((SELECT "user_profiles"."the_geom" FROM "user_profiles" WHERE "user_profiles"."userAccountId" = :uid), "user_profiles"."the_geom") / 1000 < :distance AND "user_profiles"."the_geom" IS NOT NULL UNION SELECT "relationship_friends"."userB" AS friend, "user_profiles"."profilePhoto" as "profilePhoto", "user_profiles"."nickName" AS nickname, "user_profiles"."currentLocation"->\'updatedAt\' as "checkinTime", ST_Distance_Sphere((SELECT "user_profiles"."the_geom" FROM "user_profiles" WHERE "user_profiles"."userAccountId" = :uid), "user_profiles"."the_geom") / 1000 AS distance FROM "relationship_friends" LEFT JOIN "user_profiles" ON "relationship_friends"."userB" = "user_profiles"."userAccountId" LEFT JOIN "dataSet_towns" ON "dataSet_towns"."id" = "user_profiles"."homeTownId" WHERE "relationship_friends"."userA" = :uid AND "relationship_friends"."status" = \'active\' AND ST_Distance_Sphere((SELECT "user_profiles"."the_geom" FROM "user_profiles" WHERE "user_profiles"."userAccountId" = :uid), "user_profiles"."the_geom") / 1000 < :distance AND "user_profiles"."the_geom" IS NOT NULL ORDER BY distance;',
        pendingFriendRequests: 'SELECT "relationship_friends"."id" as "requestId", "user_profiles"."userAccountId", "user_profiles"."nickName", "user_profiles"."profilePhoto", "dataSet_towns"."location", "dataSet_towns"."state", "dataSet_towns"."tourism_region" FROM "relationship_friends" LEFT JOIN "user_profiles" ON "relationship_friends"."initiator" = "user_profiles"."userAccountId" LEFT JOIN "dataSet_towns" ON "dataSet_towns"."id" = "user_profiles"."homeTownId" WHERE "relationship_friends"."recipient" = :uid AND "relationship_friends"."status" = \'pending\'',
        activeFriends: 'SELECT "relationship_friends"."userA" AS friend, "user_profiles"."nickName" AS nickname, "user_profiles"."currentLocation" AS "currentLocation", "user_profiles"."profilePhoto", "user_profiles"."homeTownId", "dataSet_towns"."location", "dataSet_towns"."state", "dataSet_towns"."tourism_region" FROM "relationship_friends" LEFT JOIN "user_profiles" ON "relationship_friends"."userA" = "user_profiles"."userAccountId" LEFT JOIN "dataSet_towns" ON "user_profiles"."homeTownId" = "dataSet_towns"."id" WHERE "relationship_friends"."userB" = :uid AND "relationship_friends"."status" = \'active\' UNION SELECT "relationship_friends"."userB" AS friend, "user_profiles"."nickName" AS nickname, "user_profiles"."currentLocation" AS "currentLocation", "user_profiles"."profilePhoto", "user_profiles"."homeTownId", "dataSet_towns"."location", "dataSet_towns"."state", "dataSet_towns"."tourism_region" FROM "relationship_friends" LEFT JOIN "user_profiles" ON "relationship_friends"."userB" = "user_profiles"."userAccountId" LEFT JOIN "dataSet_towns" ON "user_profiles"."homeTownId" = "dataSet_towns"."id" WHERE "relationship_friends"."userA" = :uid AND "relationship_friends"."status" = \'active\'',
        nearestTown: 'SELECT towns."location", towns."tourism_region", towns."state", ST_Distance_Sphere(towns.geom, st_setsrid(st_makepoint(:lon, :lat),4326)) / 1000 as distance FROM "dataSet_towns" AS towns ORDER BY ST_Distance_sphere(towns.geom, st_setsrid(st_makepoint(:lon, :lat),4326)) LIMIT 1;',
        getMessageTheads: 'SELECT DISTINCT ON ("message_threads"."threadId") "message_threads"."threadId", SELECT_FIRST("user_profiles"."userAccountId") as "subscriberId",SELECT_FIRST("user_profiles"."nickName") as subscriber_nickname, string_agg("user_profiles"."nickName", \', \') as subscribers, COUNT("message_user_threads"."userThreadId") as qty_subscribers, SELECT_FIRST("user_profiles"."profilePhoto") as photo, jsonb_array_elements("message_threads"."threadContent")->\'message\' as message, jsonb_array_length("message_threads"."threadContent") as message_count FROM "message_threads" LEFT JOIN "message_user_threads" ON "message_user_threads"."threadId" = "message_threads"."threadId" LEFT JOIN "user_profiles" ON "message_user_threads"."userAccountId" = "user_profiles"."userAccountId" WHERE "message_threads"."threadId" IN (SELECT "message_user_threads"."threadId" FROM "message_user_threads" WHERE "message_user_threads"."userAccountId" = :uid) AND "message_user_threads"."status" = \'active\' GROUP BY "message_threads"."threadId";'
};
